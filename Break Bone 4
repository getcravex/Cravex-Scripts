local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({

    Title = 'Exemple UI',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Misc')
local PlayerGroupBox = Tabs.Main:AddRightGroupbox('Player')

local MyButton = LeftGroupBox:AddButton({
    Text = 'Infinite Cash',
    Func = function()
        local ohString1 = "money"
        local ohNumber2 = 99^100

        game:GetService("ReplicatedStorage").Functions.UpdateStat:InvokeServer(ohString1, ohNumber2)

        wait(1)

        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end,
    DoubleClick = false,
    Tooltip = 'Will make you rejoin with a high amount of Money'
})


local MyButton = LeftGroupBox:AddButton({
    Text = 'Gain XP',
    Func = function()
        local ohString1 = "totalbreaks"
        local ohString2 = "runs"
        local ohString3 = "totalsprains"
        local ohString4 = "totaldislocations"
        local ohNumber1 = 100

        game:GetService("ReplicatedStorage").Functions.UpdateStat:InvokeServer(ohString1, ohNumber1)
        wait(0.2)
        game:GetService("ReplicatedStorage").Functions.UpdateStat:InvokeServer(ohString2, ohNumber1)
        wait(0.2)
        game:GetService("ReplicatedStorage").Functions.UpdateStat:InvokeServer(ohString3, ohNumber1)
        wait(0.2)
        game:GetService("ReplicatedStorage").Functions.UpdateStat:InvokeServer(ohString4, ohNumber1)
        
        wait(1) 

        -- Rejoin the game
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end,
    DoubleClick = false,
    Tooltip = 'Will give XP and rejoin'
})

local gravityLocked = false

Library:SetWatermarkVisibility(true)

local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1;

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;

    Library:SetWatermark(('https://discord.gg/NPzzhqTMvq | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ));
end);

Library.KeybindFrame.Visible = true;

Library:OnUnload(function()
    WatermarkConnection:Disconnect()

    print('Unloaded!')
    Library.Unloaded = true
end)

local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
